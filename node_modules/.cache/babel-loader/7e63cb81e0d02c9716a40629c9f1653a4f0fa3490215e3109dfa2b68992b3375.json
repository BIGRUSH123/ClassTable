{"ast":null,"code":"// 调试工具：检查课程数据的完整性\nexport function validateCourseData(courses) {\n  const errors = [];\n  const warnings = [];\n  courses.forEach((course, index) => {\n    // 检查必需字段\n    if (!course.id) {\n      errors.push(`课程 ${index + 1}: 缺少 ID`);\n    }\n    if (!course.name) {\n      errors.push(`课程 ${index + 1}: 缺少课程名称`);\n    }\n    if (!course.teacherId) {\n      errors.push(`课程 ${index + 1}: 缺少教师ID`);\n    }\n\n    // 检查 fixedTimeSlots\n    if (!course.fixedTimeSlots) {\n      errors.push(`课程 ${course.name}: 缺少 fixedTimeSlots 字段`);\n    } else if (!Array.isArray(course.fixedTimeSlots)) {\n      errors.push(`课程 ${course.name}: fixedTimeSlots 不是数组`);\n    } else {\n      if (course.fixedTimeSlots.length === 0) {\n        warnings.push(`课程 ${course.name}: 没有设置上课时间`);\n      }\n      course.fixedTimeSlots.forEach((slot, slotIndex) => {\n        if (!slot.dayOfWeek || slot.dayOfWeek < 1 || slot.dayOfWeek > 7) {\n          errors.push(`课程 ${course.name}, 时间段 ${slotIndex + 1}: dayOfWeek 无效 (${slot.dayOfWeek})`);\n        }\n        if (!slot.timeSlotIds || !Array.isArray(slot.timeSlotIds)) {\n          errors.push(`课程 ${course.name}, 时间段 ${slotIndex + 1}: timeSlotIds 不是数组`);\n        } else if (slot.timeSlotIds.length === 0) {\n          errors.push(`课程 ${course.name}, 时间段 ${slotIndex + 1}: timeSlotIds 为空`);\n        }\n      });\n    }\n\n    // 检查其他字段\n    if (typeof course.credits !== 'number' || course.credits <= 0) {\n      warnings.push(`课程 ${course.name}: 学分数无效 (${course.credits})`);\n    }\n  });\n  return {\n    isValid: errors.length === 0,\n    errors,\n    warnings\n  };\n}\n\n// 打印课程数据到控制台\nexport function logCourseData(courses) {\n  console.group('课程数据详情');\n  courses.forEach((course, index) => {\n    console.group(`课程 ${index + 1}: ${course.name}`);\n    console.log('ID:', course.id);\n    console.log('教师ID:', course.teacherId);\n    console.log('学分:', course.credits);\n    console.log('地点:', course.location);\n    console.log('周次:', course.weeks);\n    console.log('固定时间段:', course.fixedTimeSlots);\n    console.groupEnd();\n  });\n  console.groupEnd();\n}\n\n// 检查 localStorage 数据\nexport function checkLocalStorageData() {\n  console.group('LocalStorage 数据检查');\n  const keys = ['teachers', 'courses', 'schedule', 'timeSlots'];\n  keys.forEach(key => {\n    const data = localStorage.getItem(key);\n    if (data) {\n      try {\n        const parsed = JSON.parse(data);\n        console.log(`${key}:`, parsed);\n        if (key === 'courses' && Array.isArray(parsed)) {\n          const validation = validateCourseData(parsed);\n          if (!validation.isValid) {\n            console.error(`${key} 数据验证失败:`, validation.errors);\n          }\n          if (validation.warnings.length > 0) {\n            console.warn(`${key} 数据警告:`, validation.warnings);\n          }\n        }\n      } catch (error) {\n        console.error(`${key} 数据解析失败:`, error);\n      }\n    } else {\n      console.log(`${key}: 无数据`);\n    }\n  });\n  console.groupEnd();\n}","map":{"version":3,"names":["validateCourseData","courses","errors","warnings","forEach","course","index","id","push","name","teacherId","fixedTimeSlots","Array","isArray","length","slot","slotIndex","dayOfWeek","timeSlotIds","credits","isValid","logCourseData","console","group","log","location","weeks","groupEnd","checkLocalStorageData","keys","key","data","localStorage","getItem","parsed","JSON","parse","validation","error","warn"],"sources":["D:/code/classtable/src/utils/debugHelper.ts"],"sourcesContent":["import { Course, FixedTimeSlot } from '../types';\r\n\r\n// 调试工具：检查课程数据的完整性\r\nexport function validateCourseData(courses: Course[]): {\r\n  isValid: boolean;\r\n  errors: string[];\r\n  warnings: string[];\r\n} {\r\n  const errors: string[] = [];\r\n  const warnings: string[] = [];\r\n\r\n  courses.forEach((course, index) => {\r\n    // 检查必需字段\r\n    if (!course.id) {\r\n      errors.push(`课程 ${index + 1}: 缺少 ID`);\r\n    }\r\n    if (!course.name) {\r\n      errors.push(`课程 ${index + 1}: 缺少课程名称`);\r\n    }\r\n    if (!course.teacherId) {\r\n      errors.push(`课程 ${index + 1}: 缺少教师ID`);\r\n    }\r\n\r\n    // 检查 fixedTimeSlots\r\n    if (!course.fixedTimeSlots) {\r\n      errors.push(`课程 ${course.name}: 缺少 fixedTimeSlots 字段`);\r\n    } else if (!Array.isArray(course.fixedTimeSlots)) {\r\n      errors.push(`课程 ${course.name}: fixedTimeSlots 不是数组`);\r\n    } else {\r\n      if (course.fixedTimeSlots.length === 0) {\r\n        warnings.push(`课程 ${course.name}: 没有设置上课时间`);\r\n      }\r\n\r\n      course.fixedTimeSlots.forEach((slot, slotIndex) => {\r\n        if (!slot.dayOfWeek || slot.dayOfWeek < 1 || slot.dayOfWeek > 7) {\r\n          errors.push(`课程 ${course.name}, 时间段 ${slotIndex + 1}: dayOfWeek 无效 (${slot.dayOfWeek})`);\r\n        }\r\n        if (!slot.timeSlotIds || !Array.isArray(slot.timeSlotIds)) {\r\n          errors.push(`课程 ${course.name}, 时间段 ${slotIndex + 1}: timeSlotIds 不是数组`);\r\n        } else if (slot.timeSlotIds.length === 0) {\r\n          errors.push(`课程 ${course.name}, 时间段 ${slotIndex + 1}: timeSlotIds 为空`);\r\n        }\r\n      });\r\n    }\r\n\r\n    // 检查其他字段\r\n    if (typeof course.credits !== 'number' || course.credits <= 0) {\r\n      warnings.push(`课程 ${course.name}: 学分数无效 (${course.credits})`);\r\n    }\r\n  });\r\n\r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors,\r\n    warnings\r\n  };\r\n}\r\n\r\n// 打印课程数据到控制台\r\nexport function logCourseData(courses: Course[]) {\r\n  console.group('课程数据详情');\r\n  courses.forEach((course, index) => {\r\n    console.group(`课程 ${index + 1}: ${course.name}`);\r\n    console.log('ID:', course.id);\r\n    console.log('教师ID:', course.teacherId);\r\n    console.log('学分:', course.credits);\r\n    console.log('地点:', course.location);\r\n    console.log('周次:', course.weeks);\r\n    console.log('固定时间段:', course.fixedTimeSlots);\r\n    console.groupEnd();\r\n  });\r\n  console.groupEnd();\r\n}\r\n\r\n// 检查 localStorage 数据\r\nexport function checkLocalStorageData() {\r\n  console.group('LocalStorage 数据检查');\r\n  \r\n  const keys = ['teachers', 'courses', 'schedule', 'timeSlots'];\r\n  keys.forEach(key => {\r\n    const data = localStorage.getItem(key);\r\n    if (data) {\r\n      try {\r\n        const parsed = JSON.parse(data);\r\n        console.log(`${key}:`, parsed);\r\n        if (key === 'courses' && Array.isArray(parsed)) {\r\n          const validation = validateCourseData(parsed);\r\n          if (!validation.isValid) {\r\n            console.error(`${key} 数据验证失败:`, validation.errors);\r\n          }\r\n          if (validation.warnings.length > 0) {\r\n            console.warn(`${key} 数据警告:`, validation.warnings);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(`${key} 数据解析失败:`, error);\r\n      }\r\n    } else {\r\n      console.log(`${key}: 无数据`);\r\n    }\r\n  });\r\n  \r\n  console.groupEnd();\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}